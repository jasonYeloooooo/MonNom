from retic.runtime import *
from retic.monotonic import *
from retic.typing import *
from compat import xrange
import util
from math import sin, cos, sqrt
import optparse
import time


class Point(retic_actual(object), metaclass=Monotonic):
    retic_class_type = Class('Point', {'__repr__': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'maximize': Function(NamedParameters([('self', Dyn), ('other', Dyn)]), Dyn), 'normalize': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self, i):
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:11:8: Cannot write to attribute x in value %s because it is not an object. (code NON_OBJECT_WRITE)').x = x = retic_cast(sin, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:11:21: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(i)
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:12:8: Cannot write to attribute y in value %s because it is not an object. (code NON_OBJECT_WRITE)').y = (retic_cast(cos, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:12:17: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(i) * 3)
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:13:8: Cannot write to attribute z in value %s because it is not an object. (code NON_OBJECT_WRITE)').z = ((x * x) / 2)
    __init__ = retic_cast(__init__, Dyn, Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), "\nbm_float00.py:10:4: Function %s does not match specified type Function(['self:Dyn', 'i:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

    def __repr__(self):
        return retic_cast(('<Point: x=%s, y=%s, z=%s>' % (retic_cast(self, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:16:46: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x, retic_cast(self, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:16:54: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y, retic_cast(self, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:16:62: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z)), String, Dyn, '\nbm_float00.py:16:8: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
    __repr__ = retic_cast(__repr__, Dyn, Function(NamedParameters([('self', Dyn)]), Dyn), "\nbm_float00.py:15:4: Function %s does not match specified type Function(['self:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

    def normalize(self):
        x = retic_cast(self, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:19:12: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x
        y = retic_cast(self, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:20:12: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y
        z = retic_cast(self, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:21:12: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z
        norm = retic_cast(sqrt, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:22:15: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((((x * x) + (y * y)) + (z * z)))
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:23:8: Cannot write to attribute x in value %s because it is not an object. (code NON_OBJECT_WRITE)').x = (retic_cast(self, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:23:8: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x / norm)
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:24:8: Cannot write to attribute y in value %s because it is not an object. (code NON_OBJECT_WRITE)').y = (retic_cast(self, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:24:8: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y / norm)
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:25:8: Cannot write to attribute z in value %s because it is not an object. (code NON_OBJECT_WRITE)').z = (retic_cast(self, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:25:8: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z / norm)
    normalize = retic_cast(normalize, Dyn, Function(NamedParameters([('self', Dyn)]), Dyn), "\nbm_float00.py:18:4: Function %s does not match specified type Function(['self:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

    def maximize(self, other):
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:28:8: Cannot write to attribute x in value %s because it is not an object. (code NON_OBJECT_WRITE)').x = (retic_cast(self, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:28:17: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x if (retic_cast(self, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:28:27: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x > retic_cast(other, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:28:36: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x) else retic_cast(other, Dyn, Object('', {'x': Dyn, }), '\nbm_float00.py:28:49: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x)
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:29:8: Cannot write to attribute y in value %s because it is not an object. (code NON_OBJECT_WRITE)').y = (retic_cast(self, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:29:17: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y if (retic_cast(self, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:29:27: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y > retic_cast(other, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:29:36: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y) else retic_cast(other, Dyn, Object('', {'y': Dyn, }), '\nbm_float00.py:29:49: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y)
        retic_cast(self, Dyn, Object('', {}), '\nbm_float00.py:30:8: Cannot write to attribute z in value %s because it is not an object. (code NON_OBJECT_WRITE)').z = (retic_cast(self, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:30:17: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z if (retic_cast(self, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:30:27: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z > retic_cast(other, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:30:36: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z) else retic_cast(other, Dyn, Object('', {'z': Dyn, }), '\nbm_float00.py:30:49: Accessing nonexistant object attribute z from value %s. (code WIDTH_DOWNCAST)').z)
        return self
    maximize = retic_cast(maximize, Dyn, Function(NamedParameters([('self', Dyn), ('other', Dyn)]), Dyn), "\nbm_float00.py:27:4: Function %s does not match specified type Function(['self:Dyn', 'other:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")
Point = retic_cast(Point, Dyn, Class('Point', {'__repr__': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'maximize': Function(NamedParameters([('self', Dyn), ('other', Dyn)]), Dyn), 'normalize': Function(NamedParameters([('self', Dyn)]), Dyn), }, {}), "\nbm_float00.py:8:0: Class %s does not match specified type Class(Point, {'__repr__': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn'], Dyn), 'maximize': Function(['self:Dyn', 'other:Dyn'], Dyn), 'normalize': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_CLASS_INJECTION)")

def maximize(points):
    next = points[0]
    for p in points[1:]:
        next = retic_cast(retic_cast(next, Dyn, Object('', {'maximize': Dyn, }), '\nbm_float00.py:37:15: Accessing nonexistant object attribute maximize from value %s. (code WIDTH_DOWNCAST)').maximize, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:37:15: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(p)
    return next
maximize = retic_cast(maximize, Dyn, Function(NamedParameters([('points', Dyn)]), Dyn), "\nbm_float00.py:34:0: Function %s does not match specified type Function(['points:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

def benchmark(n):
    points = [retic_cast(Point(i), Dyn, Object('Point', {'__repr__': Function(NamedParameters([]), Dyn), 'maximize': Function(NamedParameters([('other', Dyn)]), Dyn), 'normalize': Function(NamedParameters([]), Dyn), }), "\nbm_float00.py:41:14: Constructed object value %s does not match type Object(Point, {'__repr__': Function([], Dyn), 'maximize': Function(['other:Dyn'], Dyn), 'normalize': Function([], Dyn)}),  expected for instances of Class(Point, {'__repr__': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn'], Dyn), 'maximize': Function(['self:Dyn', 'other:Dyn'], Dyn), 'normalize': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)") for i in retic_cast(xrange, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:41:32: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(n)]
    for p in retic_cast(points, List(Object('Point', {'__repr__': Function(NamedParameters([]), Dyn), 'maximize': Function(NamedParameters([('other', Dyn)]), Dyn), 'normalize': Function(NamedParameters([]), Dyn), })), List(Dyn), '\nbm_float00.py:42:4: Iteration target was expected to be of type List(Dyn), but value %s was provided instead. (code ITER_ERROR)'):
        retic_cast(retic_cast(p, Dyn, Object('', {'normalize': Dyn, }), '\nbm_float00.py:43:8: Accessing nonexistant object attribute normalize from value %s. (code WIDTH_DOWNCAST)').normalize, Dyn, Function(AnonymousParameters([]), Dyn), '\nbm_float00.py:43:8: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
    return maximize(retic_cast(points, List(Object('Point', {'__repr__': Function(NamedParameters([]), Dyn), 'maximize': Function(NamedParameters([('other', Dyn)]), Dyn), 'normalize': Function(NamedParameters([]), Dyn), })), Dyn, '\nbm_float00.py:44:11: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'))
benchmark = retic_cast(benchmark, Dyn, Function(NamedParameters([('n', Dyn)]), Dyn), "\nbm_float00.py:40:0: Function %s does not match specified type Function(['n:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")
POINTS = 100000

def main(arg, timer):
    times = []
    for i in retic_cast(xrange, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:52:13: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(arg):
        t0 = retic_cast(timer, Dyn, Function(AnonymousParameters([]), Dyn), '\nbm_float00.py:53:13: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        o = benchmark(retic_cast(POINTS, Int, Dyn, '\nbm_float00.py:54:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'))
        tk = retic_cast(timer, Dyn, Function(AnonymousParameters([]), Dyn), '\nbm_float00.py:55:13: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        retic_getattr_dynamic(times, 'append', Function(AnonymousParameters([Dyn]), Void))((tk - t0))
    return retic_cast(times, List(Dyn), Dyn, '\nbm_float00.py:57:4: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
main = retic_cast(main, Dyn, Function(NamedParameters([('arg', Dyn), ('timer', Dyn)]), Dyn), "\nbm_float00.py:48:0: Function %s does not match specified type Function(['arg:Dyn', 'timer:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")
if (__name__ == '__main__'):
    parser = retic_cast(retic_cast(optparse, Dyn, Object('', {'OptionParser': Dyn, }), '\nbm_float00.py:60:13: Accessing nonexistant object attribute OptionParser from value %s. (code WIDTH_DOWNCAST)').OptionParser, Dyn, Function(DynParameters, Dyn), '\nbm_float00.py:60:13: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(usage='%prog [options]', description='Test the performance of the Float benchmark')
    retic_cast(retic_cast(util, Dyn, Object('', {'add_standard_options_to': Dyn, }), '\nbm_float00.py:63:4: Accessing nonexistant object attribute add_standard_options_to from value %s. (code WIDTH_DOWNCAST)').add_standard_options_to, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nbm_float00.py:63:4: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(parser)
    (options, args) = retic_cast(retic_cast(retic_cast(parser, Dyn, Object('', {'parse_args': Dyn, }), '\nbm_float00.py:64:20: Accessing nonexistant object attribute parse_args from value %s. (code WIDTH_DOWNCAST)').parse_args, Dyn, Function(AnonymousParameters([]), Dyn), '\nbm_float00.py:64:20: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(), Dyn, Tuple(Dyn, Dyn), '\nbm_float00.py:64:4: Right hand side of assignment was expected to be of type Tuple(Dyn,Dyn), but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    retic_cast(retic_cast(util, Dyn, Object('', {'run_benchmark': Dyn, }), '\nbm_float00.py:66:4: Accessing nonexistant object attribute run_benchmark from value %s. (code WIDTH_DOWNCAST)').run_benchmark, Dyn, Function(AnonymousParameters([Dyn, Int, Function(NamedParameters([('arg', Dyn), ('timer', Dyn)]), Dyn)]), Dyn), '\nbm_float00.py:66:4: Expected function of type Function([\'Dyn\', \'Int\', "Function([\'arg:Dyn\', \'timer:Dyn\'], Dyn)"], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(options, 1, main)
